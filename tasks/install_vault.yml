---
- include_vars: ../vars/variables.yml
- name: download software zip file
  get_url:
    url: "{{ software_url }}"
    dest: "{{ vault_home_path }}"
    mode: '755'

- name: "unzip software"
  unarchive:
    src: "{{ vault_home_path }}/{{ vault_zip_file }}"
    dest: "/opt/vault/bin"
    copy: no
  become: true

- name: "configure vault location"
  file:
    path: "/etc/vault"
    state: directory

- name: "copy template config.json file"
  template:
    src: "../templates/config_json.j2"
    dest: "/etc/vault/config.json"
  become: true

- name: "move the files to /etc/services"
  template:
    src: "../templates/vault_service.j2"
    dest: "/usr/lib/systemd/system//vault.service"

- name: disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: false
  become: true

- name: "enable and start services"
  service:
    name: vault
    state: started
    daemon_reload: yes
    enabled: true

- debug: msg="{{ vault_status}}"
- name: "Initialize the vault"
  shell: vault operator init >> /home/vault/init.log
  register: keys
  environment:
    VAULT_ADDR: "http://{{ host_name }}:8200"
    PATH: "$PATH:{{ vault_bin_location }}"
  when: "{{vault_status}}" == true
- debug: msg="{{ keys }}"

- name: check vault status
  command: 'vault status'
  register: vault_status
  environment:
    VAULT_ADDR: "http://{{ host_name }}:8200"
    PATH: "$PATH:{{ vault_bin_location }}" 

- debug: msg="{{ vault_status}}"